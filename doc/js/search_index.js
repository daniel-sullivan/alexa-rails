var search_data = {"index":{"searchIndex":["actiondispatch","activerecord","activesupport","alexa","applicationhelper","applicationjob","applicationmailer","applicationrecord","context","contexthelper","device","engine","intenthandlers","base","request","response","responses","bye","delegate","session","slot","test","applicationcable","channel","connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","dummy","application","logger","minitest","navigationtest","object","_required_slot_names()","alexa_context()","alexa_request()","alexa_response()","alexa_response=()","api_access_token()","api_endpoint()","application_id()","application_id()","as_json()","as_json()","audio_supported?()","audio_supported?()","bad_match?()","bye_response()","cancel_request?()","context_alexa_user()","delegate_response()","device()","dialog_complete?()","dialog_state()","dialog_state()","elicit_directives()","elicit_slot!()","elicitation_count_for()","empty_slots()","end_session?()","end_session?()","geocode()","handle()","has_all_slots?()","has_required_slots?()","has_resolutions?()","has_unmatched_slots?()","help_request?()","id()","increment_elicitation_count!()","inherited()","intent_confirmed?()","intent_denied?()","intent_name()","intent_request?()","intent_usage_count()","keep_listening!()","keep_listening?()","launch_request?()","locale()","locale()","location()","matched?()","matched_id()","matched_value()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","non_empty_slots()","partial_path()","partial_path()","request()","required_slot_names()","required_slot_names()","resolution()","response()","say_welcome!()","say_welcome?()","session()","session()","session()","session_ended_request?()","slots()","slots()","sorry_response()","system!()","type()","unmatched_slots()","user()","user_id()","user_id()","valid?()","video_supported?()","video_supported?()","gemfile","mit-license","readme","rakefile","alexa.gemspec","alexa_manifest.js","application.js","application.css","alexa_tasks.rake","rakefile","manifest.js","application.js","cable.js","application.css","config.ru","package.json","404.html","422.html","500.html","apple-touch-icon-precomposed.png","apple-touch-icon.png","favicon.ico"],"longSearchIndex":["actiondispatch","activerecord","activesupport","alexa","alexa::applicationhelper","alexa::applicationjob","alexa::applicationmailer","alexa::applicationrecord","alexa::context","alexa::contexthelper","alexa::device","alexa::engine","alexa::intenthandlers","alexa::intenthandlers::base","alexa::request","alexa::response","alexa::responses","alexa::responses::bye","alexa::responses::delegate","alexa::session","alexa::slot","alexa::test","applicationcable","applicationcable::channel","applicationcable::connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","dummy","dummy::application","logger","minitest","navigationtest","object","alexa::intenthandlers::base::_required_slot_names()","alexa::contexthelper#alexa_context()","alexa::contexthelper#alexa_request()","alexa::contexthelper#alexa_response()","alexa::contexthelper#alexa_response=()","alexa::context#api_access_token()","alexa::context#api_endpoint()","alexa::request#application_id()","alexa::session#application_id()","alexa::responses::delegate#as_json()","alexa::slot#as_json()","alexa::device#audio_supported?()","alexa::intenthandlers::base#audio_supported?()","alexa::slot#bad_match?()","alexa::intenthandlers::base#bye_response()","alexa::request#cancel_request?()","alexa::contexthelper#context_alexa_user()","alexa::intenthandlers::base#delegate_response()","alexa::context#device()","alexa::intenthandlers::base#dialog_complete?()","alexa::intenthandlers::base#dialog_state()","alexa::request#dialog_state()","alexa::response#elicit_directives()","alexa::response#elicit_slot!()","alexa::session#elicitation_count_for()","alexa::intenthandlers::base#empty_slots()","alexa::response#end_session?()","alexa::responses::bye#end_session?()","alexa::device#geocode()","alexa::intenthandlers::base#handle()","alexa::intenthandlers::base#has_all_slots?()","alexa::intenthandlers::base#has_required_slots?()","alexa::slot#has_resolutions?()","alexa::intenthandlers::base#has_unmatched_slots?()","alexa::request#help_request?()","alexa::device#id()","alexa::session#increment_elicitation_count!()","alexa::intenthandlers::base::inherited()","alexa::intenthandlers::base#intent_confirmed?()","alexa::intenthandlers::base#intent_denied?()","alexa::request#intent_name()","alexa::request#intent_request?()","alexa::intenthandlers::base#intent_usage_count()","alexa::response#keep_listening!()","alexa::response#keep_listening?()","alexa::request#launch_request?()","alexa::context#locale()","alexa::request#locale()","alexa::device#location()","alexa::slot#matched?()","alexa::slot#matched_id()","alexa::slot#matched_value()","alexa::context::new()","alexa::device::new()","alexa::intenthandlers::base::new()","alexa::request::new()","alexa::response::new()","alexa::responses::bye::new()","alexa::session::new()","alexa::slot::new()","alexa::session#new?()","alexa::intenthandlers::base#non_empty_slots()","alexa::response#partial_path()","alexa::responses::bye#partial_path()","alexa::intenthandlers::base#request()","alexa::intenthandlers::base::required_slot_names()","alexa::intenthandlers::base#required_slot_names()","alexa::slot#resolution()","alexa::intenthandlers::base#response()","alexa::intenthandlers::base#say_welcome!()","alexa::intenthandlers::base#say_welcome?()","alexa::context#session()","alexa::intenthandlers::base#session()","alexa::request#session()","alexa::request#session_ended_request?()","alexa::intenthandlers::base#slots()","alexa::request#slots()","alexa::intenthandlers::base#sorry_response()","object#system!()","alexa::request#type()","alexa::intenthandlers::base#unmatched_slots()","alexa::context#user()","alexa::request#user_id()","alexa::session#user_id()","alexa::request#valid?()","alexa::device#video_supported?()","alexa::intenthandlers::base#video_supported?()","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ActionDispatch","","ActionDispatch.html","",""],["ActiveRecord","","ActiveRecord.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["Alexa","","Alexa.html","","<p>This class represents the <code>device</code> part in the request.\n"],["Alexa::ApplicationHelper","","Alexa/ApplicationHelper.html","",""],["Alexa::ApplicationJob","","Alexa/ApplicationJob.html","",""],["Alexa::ApplicationMailer","","Alexa/ApplicationMailer.html","",""],["Alexa::ApplicationRecord","","Alexa/ApplicationRecord.html","",""],["Alexa::Context","","Alexa/Context.html","",""],["Alexa::ContextHelper","","Alexa/ContextHelper.html","",""],["Alexa::Device","","Alexa/Device.html","",""],["Alexa::Engine","","Alexa/Engine.html","",""],["Alexa::IntentHandlers","","Alexa/IntentHandlers.html","",""],["Alexa::IntentHandlers::Base","","Alexa/IntentHandlers/Base.html","",""],["Alexa::Request","","Alexa/Request.html","",""],["Alexa::Response","","Alexa/Response.html","",""],["Alexa::Responses","","Alexa/Responses.html","",""],["Alexa::Responses::Bye","","Alexa/Responses/Bye.html","",""],["Alexa::Responses::Delegate","","Alexa/Responses/Delegate.html","",""],["Alexa::Session","","Alexa/Session.html","",""],["Alexa::Slot","","Alexa/Slot.html","",""],["Alexa::Test","","Alexa/Test.html","",""],["ApplicationCable","","ApplicationCable.html","",""],["ApplicationCable::Channel","","ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","ApplicationCable/Connection.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["Dummy","","Dummy.html","",""],["Dummy::Application","","Dummy/Application.html","",""],["Logger","","Logger.html","",""],["Minitest","","Minitest.html","",""],["NavigationTest","","NavigationTest.html","",""],["Object","","Object.html","",""],["_required_slot_names","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-c-_required_slot_names","()","<p>Lets you set <code>required_slot_names</code> per subclass\n<p>class IntentHandlers::NewIntent &lt; IntentHandlers::Base …\n"],["alexa_context","Alexa::ContextHelper","Alexa/ContextHelper.html#method-i-alexa_context","()",""],["alexa_request","Alexa::ContextHelper","Alexa/ContextHelper.html#method-i-alexa_request","()",""],["alexa_response","Alexa::ContextHelper","Alexa/ContextHelper.html#method-i-alexa_response","()",""],["alexa_response=","Alexa::ContextHelper","Alexa/ContextHelper.html#method-i-alexa_response-3D","(resp)",""],["api_access_token","Alexa::Context","Alexa/Context.html#method-i-api_access_token","()",""],["api_endpoint","Alexa::Context","Alexa/Context.html#method-i-api_endpoint","()",""],["application_id","Alexa::Request","Alexa/Request.html#method-i-application_id","()",""],["application_id","Alexa::Session","Alexa/Session.html#method-i-application_id","()",""],["as_json","Alexa::Responses::Delegate","Alexa/Responses/Delegate.html#method-i-as_json","(options={})",""],["as_json","Alexa::Slot","Alexa/Slot.html#method-i-as_json","(options={})",""],["audio_supported?","Alexa::Device","Alexa/Device.html#method-i-audio_supported-3F","()",""],["audio_supported?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-audio_supported-3F","()",""],["bad_match?","Alexa::Slot","Alexa/Slot.html#method-i-bad_match-3F","()",""],["bye_response","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-bye_response","()",""],["cancel_request?","Alexa::Request","Alexa/Request.html#method-i-cancel_request-3F","()",""],["context_alexa_user","Alexa::ContextHelper","Alexa/ContextHelper.html#method-i-context_alexa_user","()",""],["delegate_response","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-delegate_response","()",""],["device","Alexa::Context","Alexa/Context.html#method-i-device","()",""],["dialog_complete?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-dialog_complete-3F","()",""],["dialog_state","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-dialog_state","()",""],["dialog_state","Alexa::Request","Alexa/Request.html#method-i-dialog_state","()",""],["elicit_directives","Alexa::Response","Alexa/Response.html#method-i-elicit_directives","()",""],["elicit_slot!","Alexa::Response","Alexa/Response.html#method-i-elicit_slot-21","(slot_to_elicit, skip_render: false)","<p>Marks a slot for elicitation.\n<p>Options:\n\n<pre>- skip_render: Lets you skip the rendering of the elicited slot&#39;s ...</pre>\n"],["elicitation_count_for","Alexa::Session","Alexa/Session.html#method-i-elicitation_count_for","(slot_name)",""],["empty_slots","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-empty_slots","()",""],["end_session?","Alexa::Response","Alexa/Response.html#method-i-end_session-3F","()",""],["end_session?","Alexa::Responses::Bye","Alexa/Responses/Bye.html#method-i-end_session-3F","()",""],["geocode","Alexa::Device","Alexa/Device.html#method-i-geocode","()",""],["handle","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-handle","()",""],["has_all_slots?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-has_all_slots-3F","()",""],["has_required_slots?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-has_required_slots-3F","()",""],["has_resolutions?","Alexa::Slot","Alexa/Slot.html#method-i-has_resolutions-3F","()",""],["has_unmatched_slots?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-has_unmatched_slots-3F","()",""],["help_request?","Alexa::Request","Alexa/Request.html#method-i-help_request-3F","()",""],["id","Alexa::Device","Alexa/Device.html#method-i-id","()","<p>Return device id\n"],["increment_elicitation_count!","Alexa::Session","Alexa/Session.html#method-i-increment_elicitation_count-21","(slot_name)",""],["inherited","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-c-inherited","(subclass)",""],["intent_confirmed?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-intent_confirmed-3F","()",""],["intent_denied?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-intent_denied-3F","()",""],["intent_name","Alexa::Request","Alexa/Request.html#method-i-intent_name","()",""],["intent_request?","Alexa::Request","Alexa/Request.html#method-i-intent_request-3F","()",""],["intent_usage_count","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-intent_usage_count","()",""],["keep_listening!","Alexa::Response","Alexa/Response.html#method-i-keep_listening-21","()",""],["keep_listening?","Alexa::Response","Alexa/Response.html#method-i-keep_listening-3F","()",""],["launch_request?","Alexa::Request","Alexa/Request.html#method-i-launch_request-3F","()",""],["locale","Alexa::Context","Alexa/Context.html#method-i-locale","()",""],["locale","Alexa::Request","Alexa/Request.html#method-i-locale","()",""],["location","Alexa::Device","Alexa/Device.html#method-i-location","()","<p>Return device location from amazon. Makes an API to amazon alexa&#39;s\ndevice location service and returns …\n"],["matched?","Alexa::Slot","Alexa/Slot.html#method-i-matched-3F","()",""],["matched_id","Alexa::Slot","Alexa/Slot.html#method-i-matched_id","()",""],["matched_value","Alexa::Slot","Alexa/Slot.html#method-i-matched_value","()",""],["new","Alexa::Context","Alexa/Context.html#method-c-new","(alexa_request)",""],["new","Alexa::Device","Alexa/Device.html#method-c-new","(attributes: {}, context:)",""],["new","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-c-new","(alexa_context)",""],["new","Alexa::Request","Alexa/Request.html#method-c-new","(request)",""],["new","Alexa::Response","Alexa/Response.html#method-c-new","(intent:, directives: [])",""],["new","Alexa::Responses::Bye","Alexa/Responses/Bye.html#method-c-new","(intent:, directives: [])",""],["new","Alexa::Session","Alexa/Session.html#method-c-new","(session={})",""],["new","Alexa::Slot","Alexa/Slot.html#method-c-new","(attributes={})",""],["new?","Alexa::Session","Alexa/Session.html#method-i-new-3F","()",""],["non_empty_slots","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-non_empty_slots","()",""],["partial_path","Alexa::Response","Alexa/Response.html#method-i-partial_path","(format: :ssml, filename: nil)",""],["partial_path","Alexa::Responses::Bye","Alexa/Responses/Bye.html#method-i-partial_path","(format: :ssml)",""],["request","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-request","()",""],["required_slot_names","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-c-required_slot_names","(*names)",""],["required_slot_names","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-required_slot_names","()",""],["resolution","Alexa::Slot","Alexa/Slot.html#method-i-resolution","()",""],["response","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-response","()",""],["say_welcome!","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-say_welcome-21","()",""],["say_welcome?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-say_welcome-3F","()",""],["session","Alexa::Context","Alexa/Context.html#method-i-session","()",""],["session","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-session","()",""],["session","Alexa::Request","Alexa/Request.html#method-i-session","()",""],["session_ended_request?","Alexa::Request","Alexa/Request.html#method-i-session_ended_request-3F","()",""],["slots","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-slots","()",""],["slots","Alexa::Request","Alexa/Request.html#method-i-slots","()",""],["sorry_response","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-sorry_response","()",""],["system!","Object","Object.html#method-i-system-21","(*args)",""],["type","Alexa::Request","Alexa/Request.html#method-i-type","()",""],["unmatched_slots","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-unmatched_slots","()",""],["user","Alexa::Context","Alexa/Context.html#method-i-user","()",""],["user_id","Alexa::Request","Alexa/Request.html#method-i-user_id","()",""],["user_id","Alexa::Session","Alexa/Session.html#method-i-user_id","()",""],["valid?","Alexa::Request","Alexa/Request.html#method-i-valid-3F","()",""],["video_supported?","Alexa::Device","Alexa/Device.html#method-i-video_supported-3F","()",""],["video_supported?","Alexa::IntentHandlers::Base","Alexa/IntentHandlers/Base.html#method-i-video_supported-3F","()",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Declare your gem&#39;s dependencies in alexa.gemspec. # Bundler will\ntreat …\n"],["MIT-LICENSE","","MIT-LICENSE.html","","<p>Copyright 2018\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software …\n"],["README","","README_md.html","","<p>Alexa\n<p>Short description and motivation.\n<p>Usage\n"],["Rakefile","","Rakefile.html","","<p>begin\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;bundler/setup&#39;</span>\n</pre>\n<p>rescue LoadError\n"],["alexa.gemspec","","alexa_gemspec.html","","<p>$:.push File.expand_path(“../lib”, __FILE__)\n<p># Maintain your gem&#39;s version: require “alexa/version” …\n"],["alexa_manifest.js","","app/assets/config/alexa_manifest_js.html","","<p>//= link_directory ../javascripts/alexa .js //= link_directory\n../stylesheets/alexa .css\n"],["application.js","","app/assets/javascripts/alexa/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["application.css","","app/assets/stylesheets/alexa/application_css.html","","\n<pre>This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\nlisted ...</pre>\n"],["alexa_tasks.rake","","lib/tasks/alexa_tasks_rake.html","","<p>desc “Explaining what the task does” task :alexa do\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Task goes here</span>\n</pre>\n<p>end\n"],["Rakefile","","test/dummy/Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["manifest.js","","test/dummy/app/assets/config/manifest_js.html","","<p>//= link_tree ../images //= link_directory ../javascripts .js //=\nlink_directory ../stylesheets .css …\n"],["application.js","","test/dummy/app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["cable.js","","test/dummy/app/assets/javascripts/cable_js.html","","<p>// Action Cable provides the framework to deal with WebSockets in Rails. //\nYou can generate new channels …\n"],["application.css","","test/dummy/app/assets/stylesheets/application_css.html","","\n<pre>This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\nlisted ...</pre>\n"],["config.ru","","test/dummy/config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require_relative &#39;config/environment&#39; …\n"],["package.json","","test/dummy/package_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;dummy&quot;,\n&quot;private&quot;: true,\n&quot;dependencies&quot;: {}</pre>\n<p>}\n"],["404.html","","test/dummy/public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","test/dummy/public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","test/dummy/public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["apple-touch-icon-precomposed.png","","test/dummy/public/apple-touch-icon-precomposed_png.html","",""],["apple-touch-icon.png","","test/dummy/public/apple-touch-icon_png.html","",""],["favicon.ico","","test/dummy/public/favicon_ico.html","",""]]}}